*&---------------------------------------------------------------------*
*& 包含               ZAESOP_TSCREEN_00
*&---------------------------------------------------------------------*


REPORT zaesop_tscreen_00.


*------------------------TSCREEN框架使用说明及规约----------------------*
*
*     Author Aesop
*     2021/01/30
*
*   简介：
*       TSCREEN框架（后简称TSCREEN)是为了解决中高难度平台开发中重复造轮子，
*       且开发风格和技术规范不统一等问题而诞生的。
*       基于TSCREEN，目前已研发出多个高复杂度平台（如采购订单平台、资金票据平台、
*       内外向交货单平台、WMS单据平台及UI5动态生成框架等），在多个（超）大型集
*       团/企业中投入实际生产使用并平稳运行。
*
*   设计初衷：
*       1、统一大中小平台的开发风格和技术规范，降低新手技术顾问开发平台的门槛
*       2、减少自建屏幕逻辑流的差异性，将每个屏幕流事件转换为对应的事件方法，
*       将POV&POH中“一个字段需要写一个MODULE”的传统改为使用统一事件处理入口
*       3、将常用的SAP标准功能进行封装，融入TSCREEN框架中，同时支持开发者通过
*       实现接口，自行开发新的TSCREEN控件
*       4、遵循SAP 2020年在GitHub发布的简洁编程开发规范指导，可使用ABAPGIT在任
*       何已有ABAPGIT的环境进行安装及使用
*       5、使用视图栈自动管理每一个TSCREEN对象，开发者无需主动去创建、调用和销
*       毁TSCREEN对象，从而能够将更多的精力放在具体业务的实现上
*
*    使用规约：
*       1、TSCREEN对报表的事件控制，参考DEMO ZAESOP_TSCREEN_01，凡是使用TSCREEN
*       的程序，必须有且仅有1个继承于zcl_treport的本地类作为报表控制类（DEMO 02是特例，
*       但不推荐，因为混淆了职责)。每个要使用TSCREEN的程序，都需要引入通用头文件：
*       zaesop_tscreen_event_inc，且zcl_treport的本地类中必须存在方法push_view
*
*       2、报表程序自身，和每一个自建屏幕，都应视为TSCREEN的一个个子对象去处理。
*       每个子对象不应该跨越自身的职责去处理不相干的业务逻辑
*
*       3、每一个内建控件都实现了ZIF_TSCREEN_COMPONENT接口，即如果有新的控件想要
*       加入到TSCREEN中，先实现该接口，再参考内建控件的 构造函数 代码去实现，即可
*       自动被TSCREEN识别和管控
*
*       4、T-CODE： ZTSCREEN 可实现对TSCREEN中所有屏幕元素的属性（只读、可编辑、必输
*       和隐藏）控制，只需要输入正确的屏幕元素信息（如所在程序名、屏幕编号、所在控件
*       及名称等）即可。建议必输属性在本地类中进行控制，否则可能因为标准功能的限制，
*       给用户带来不好的体验。如果要根据单据的不同状态实现不同的属性控制，可参考此功
*       能自己建配置表，再重写PBO方法即可。按钮的功能码和名称最好一致，可以免去打开
*       自建屏幕查看名称的麻烦。
*
*       5.TABLE CONTROL控件的名称必须形如 TC_9000_01（代表9000屏幕第一个TC，若只存在
*       一个TC，可以其它形式命名，但不推荐），其相关按钮的功能码，都必须带上TABLE CONTROL
*       控件的名称，如TC_9000_01_DELE
*
*
*------------------------TSCREEN框架使用说明及规约----------------------*
